 class PongGame {
   field Ball ball;
   field Paddle player;
   field Paddle opponent;
   field Score pscore; 
   field Score oscore;
   field int o,p;
   field int c, playerY, opponentY;
						
  /** Constructor */
   constructor PongGame new() {
      let ball = Ball.new(254,125,5);
      let player = Paddle.new(6);
	  let opponent = Paddle.new(500);
	  let pscore = Score.new(10, 1);
	  let oscore = Score.new(40, 2);
	  let c = 254;
	  let playerY = player.position();
	  let opponentY = opponent.position();
	  return this;
   }

   /** Disposal */
   method void dispose() {
      do player.dispose();
	  do opponent.dispose();
	  do pscore.dispose();
	  do oscore.dispose();
	  do ball.dispose();
      do Memory.deAlloc(this);
      return;
   }
   
   /** Draw */
   method void draw(){
		
		if (p = 1)  { do player.moveUp(); } // w key
        if (p = 2)  { do player.moveDown(); } // s key
        if (o = 1) { do opponent.moveUp(); }   // up arrow
        if (o = 2) { do opponent.moveDown(); }   // down arrow
		
		let playerY = player.position();
	    let opponentY = opponent.position();
	  
		do Sys.wait(7);
		return;
   }
   
   /** Handle Ball Movement */
   method void moveBall(int py, int oy){
		var int dir, bally, paddley, opponenty;
		let c = ball.checkx();
		
		
			let dir = -1;
			let paddley = py;  						 // PROBLEM
			let opponenty = oy;
			let bally = ball.checky();
			
			if(c = 6){ //check the player paddle 
				if((bally < paddley) & (bally > (paddley + 20))){
					let dir = -1;
				}
				else{
					do oscore.increment(); 
					do oscore.draw();
					//exit this round and start new ball
					do ball.dispose();
					let ball = Ball.new(254,125,5);
				}
			}
			
			if(c = 500){
				if((bally < opponenty) & (bally > (opponent + 20))){
					let dir = -1;
				}
				else{
					do pscore.increment();
					do pscore.draw();					
					//exit this round and start new ball
					do ball.dispose();
					let ball = Ball.new(254,125,5);
				}
			}
			do ball.move(dir);
		
		return;
   }
      
   /** Run Game */
   method void run(){
		//waits for key to be pressed
		
		var char key;  // the key currently pressed by the user
        var boolean exit;
        let exit = false;
		
		while (~exit) {
         // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
			
            do draw();
			do moveBall(playerY, opponentY);
         }
         if (key = 81)  { let exit = true; }     // q key
         if (key = 87)  { let p = 1; } // w key
         if (key = 83)  { let p = 2; } // s key
         if (key = 131) { let o = 1; }   // up arrow
         if (key = 133) { let o = 2; }   // down arrow

         // waits for the key to be released
         while (~(key = 0)) {
            let key = Keyboard.keyPressed();
			
			do draw();
			do moveBall(playerY, opponentY);
         }
     } // while
     return;
   }
   
}